@page "/"

@using AdmissionOrderWebCreator.Data.Providers
@using System.IO
@using DocumentFormat.OpenXml.Packaging
@using DocumentFormat.OpenXml.Wordprocessing

@inject TemplatesDataProvider templatesDataProvider
@inject IJSRuntime JS

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<div>
    Tempates:
</div>

@foreach (var template in templatesDataProvider.GetAllTemplates())
{
    <div>
        <span>@template.Name</span>
        <span>:</span>
        <span>@template.Path</span>
        <button @onclick="e => Replace(template.Path)">Replace</button>
    </div>
}
<br />
<br />

<div>
    Replcenents:
</div>
@foreach (var templateReplacer in Replacements)
{
    <div>
        <input type="text" placeholder="pattern" @bind-value="templateReplacer.Pattern" />
        <span>: </span>
        <input type="text" placeholder="replacement" @bind-value="templateReplacer.Replacement" />
        <button @onclick="e => Replacements.Remove(templateReplacer)">Remove</button>
    </div>
}
<button @onclick="e => Replacements.Add(new() { })">Add</button>


@code{
    class TemplateReplacer
    {
        public string Pattern { get; set; } = "<>";
        public string Replacement { get; set; } = "";

    }

    List<TemplateReplacer> Replacements = new()
    {
        new() { Pattern = "<name>", Replacement="dd" },
        new() { Pattern = "<bald text>", Replacement = "dd" },
    };

    void Replace(string templatePath)
    {
        var originalStream = File.Open(templatePath, FileMode.Open);
        var newStream = new MemoryStream();

        originalStream.CopyTo(newStream);

        using (WordprocessingDocument wordDoc = WordprocessingDocument.Open(newStream, true))
        {
            var body = wordDoc.MainDocumentPart.Document.Body;
            var paras = body.Elements<Paragraph>();

            foreach (var para in paras)
            {
                foreach (var run in para.Elements<Run>())
                {
                    foreach (var text in run.Elements<Text>())
                    {
                        foreach (var replacer in Replacements)
                        {
                            if (string.IsNullOrEmpty(replacer.Pattern) || string.IsNullOrEmpty(replacer.Replacement))
                                continue;

                            if (text.Text.Contains(replacer.Pattern))
                            {
                                text.Text = text.Text.Replace(replacer.Pattern, replacer.Replacement);
                            }
                        }
                    }
                }
            }

            wordDoc.Save();
        }

        originalStream.Close();

        var fileName = "admission.docx";

        var base64 = Convert.ToBase64String(newStream.ToArray());

        JS.InvokeVoidAsync("downloadBase64File", base64, "application/vnd.openxmlformats-officedocument.wordprocessingml.document", fileName);
    }
}
