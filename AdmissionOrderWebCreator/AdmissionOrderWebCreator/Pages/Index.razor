@page "/"

@using AdmissionOrderWebCreator.Data.Providers
@using Aspose.Words
@using Aspose.Words.Replacing
@using System.IO

@inject TemplatesDataProvider templatesDataProvider
@inject IJSRuntime JS

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<div>
    Tempates:
</div>

@foreach (var template in templatesDataProvider.GetAllTemplates())
{
    <div>
        <span>@template.Name</span>
        <span>:</span>
        <span>@template.Path</span>
        <button @onclick="e => Replace(template.Name)">Replace</button>
    </div>
}
<br />
<br />

<div>
    Replcenents:
</div>
@foreach (var templateReplacer in Replacements)
{
    <div>
        <input type="text" placeholder="pattern" @bind-value="templateReplacer.Pattern" />
        <span>: </span>
        <input type="text" placeholder="replacement" @bind-value="templateReplacer.Replacement" />
        <button @onclick="e => Replacements.Remove(templateReplacer)">Remove</button>
    </div>
}
<button @onclick="e => Replacements.Add(new() { })">Add</button>


@code{
    class TemplateReplacer
    {
        public string Pattern { get; set; } = "<>";
        public string Replacement { get; set; } = "";

    }

    List<TemplateReplacer> Replacements = new();

    void Replace(string templateName)
    {
        var doc = templatesDataProvider.GetTemplateDocument(templateName);
        foreach (var replacer in Replacements)
        {
            if (string.IsNullOrEmpty(replacer.Pattern) || string.IsNullOrEmpty(replacer.Replacement))
                continue;
            doc.Range.Replace(replacer.Pattern, replacer.Replacement, new FindReplaceOptions(FindReplaceDirection.Forward));
        }

        var stream = new MemoryStream();

        doc.Save(stream, SaveFormat.Pdf);

        var fileName = "admission.pdf";

        stream.Position = 0;

        var base64 = Convert.ToBase64String(stream.ToArray());

        JS.InvokeVoidAsync("downloadBase64File", base64, "application/pdf", fileName);

    }
}
